{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\bean/assets\\Script\\bean\\Mine.js"],"names":["Constant","require","cc","Class","extends","Component","properties","onLoad","status","MINE_STATUS","CAN_CLI","setHookMiddle","hookMiddle","MOVE_ING","waitUse","WAIT_USE","update","dt","node","position","convertToWorldSpaceAR"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,WAAWC,QAAQ,sBAAR,CAAjB;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY,EAHP;;AAMLC,UANK,oBAMK;AACN,aAAKC,MAAL,GAAcR,SAASS,WAAT,CAAqBC,OAAnC;AACA;AACA;AACA;AACA;AACH,KAZI;;;AAcL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,iBA1BK,yBA0BSC,UA1BT,EA0BqB;AACtB,aAAKJ,MAAL,GAAcR,SAASS,WAAT,CAAqBI,QAAnC;AACA,aAAKD,UAAL,GAAkBA,UAAlB;AACH,KA7BI;AA+BLE,WA/BK,qBA+BK;AACN,aAAKN,MAAL,GAAcR,SAASS,WAAT,CAAqBM,QAAnC;AACA,aAAKH,UAAL,GAAkB,IAAlB;AACH,KAlCI;AAoCLI,UApCK,kBAoCGC,EApCH,EAoCO;AACR,YAAI,KAAKT,MAAL,IAAeR,SAASS,WAAT,CAAqBI,QAAxC,EACI;AACJ,aAAKK,IAAL,CAAUC,QAAV,GAAqB,KAAKP,UAAL,CAAgBQ,qBAAhB,CAAsC,KAAKR,UAAL,CAAgBO,QAAtD,CAArB;AACH;AAxCI,CAAT","file":"Mine.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\bean","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\nconst Constant = require('../constant/Constant');\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n    },\r\n\r\n    onLoad () {\r\n        this.status = Constant.MINE_STATUS.CAN_CLI;\r\n        // this.collisionManager = cc.director.getCollisionManager();\r\n        // this.collisionManager.enabled = true;\r\n        // this.collisionManager.enabledDebugDraw = true;\r\n        // this.collisionManager.enabledDrawBoundingBox = true;\r\n    },\r\n\r\n    // start () {},\r\n\r\n    // onCollisionEnter: function(other) {\r\n    //     if (this.status != Constant.MINE_STATUS.CAN_CLI)\r\n    //         return;\r\n    //     let hook = other.node.parent.getComponent('Hook');\r\n    //     if (hook.status != Constant.HOOK_STATUS.THROWING)\r\n    //         return;\r\n    //     this.status = Constant.MINE_STATUS.MOVE_ING;\r\n    //     this.hook = other.node;\r\n    // },\r\n\r\n    setHookMiddle(hookMiddle) {\r\n        this.status = Constant.MINE_STATUS.MOVE_ING;\r\n        this.hookMiddle = hookMiddle;\r\n    },\r\n\r\n    waitUse() {\r\n        this.status = Constant.MINE_STATUS.WAIT_USE;\r\n        this.hookMiddle = null;\r\n    },\r\n\r\n    update (dt) {\r\n        if (this.status != Constant.MINE_STATUS.MOVE_ING)\r\n            return;\r\n        this.node.position = this.hookMiddle.convertToWorldSpaceAR(this.hookMiddle.position);\r\n    },\r\n});\r\n"]}