{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\pomelo/assets\\Script\\pomelo\\GameSocket.js"],"names":["Constant","require","GameSocket","module","exports","_socketInit","host","port","cb","pomelo","init","log","_getConnection","uid","Promise","resolve","reject","request","disconnect","data","code","loginGameServer","SERVER","HOST","PORT","then","gameType","GAME_TYPE","catch","addGameListener","route","on","readyFight","gameId","tableId","tableToken","robotId","doOperator","param"],"mappings":";;;;;;AAAA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;AACA,IAAMC,aAAaC,OAAOC,OAA1B;;AAEA,SAASC,WAAT,CAAsBC,IAAtB,EAA4BC,IAA5B,EAAkCC,EAAlC,EAAsC;AAClCC,WAAOC,IAAP,CAAY;AACRJ,cAAMA,IADE,EACI;AACZC,cAAMA,IAFE;AAGRI,aAAK;AAHG,KAAZ,EAIGH,EAJH;AAKH;;AAED,SAASI,cAAT,CAAwBC,GAAxB,EAA6B;AACzB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAmB;AAClCP,eAAOQ,OAAP,CAAe,6BAAf,EAA8C,EAACJ,KAAIA,GAAL,EAA9C,EAAyD,gBAAM;AAC3DJ,mBAAOS,UAAP,CAAkB,YAAI;AAClB,oBAAI,CAACC,KAAKC,IAAN,IAAc,GAAlB,EACIJ,OAAOG,KAAKC,IAAZ,EADJ,KAGIL,QAAQI,IAAR;AACP,aALD;AAMH,SAPD;AAQH,KATM,CAAP;AAUH;;AAEDjB,WAAWmB,eAAX,GAA6B,UAASR,GAAT,EAAc;AACvC,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAmB;AAClCX,oBAAYL,SAASsB,MAAT,CAAgBC,IAA5B,EAAkCvB,SAASsB,MAAT,CAAgBE,IAAlD,EAAwD,YAAI;AACxDZ,2BAAeC,GAAf,EAAoBY,IAApB,CAAyB,gBAAM;AAC3BpB,4BAAYc,KAAKb,IAAjB,EAAuBa,KAAKZ,IAA5B,EAAkC,YAAI;AAClCE,2BAAOQ,OAAP,CAAe,8BAAf,EAA+C;AAC3CJ,6BAAUA,GADiC;AAE3Ca,kCAAU1B,SAASsB,MAAT,CAAgBK;AAFiB,qBAA/C,EAGG,gBAAM;AACL,4BAAIR,KAAKC,IAAL,IAAa,GAAjB,EACIJ,OAAOG,KAAKC,IAAZ,EADJ,KAGIL,QAAQI,IAAR;AACP,qBARD;AASH,iBAVD;AAWH,aAZD,EAYGS,KAZH,CAYSZ,MAZT;AAaH,SAdD;AAeH,KAhBM,CAAP;AAiBH,CAlBD;;AAoBAd,WAAW2B,eAAX,GAA6B,UAASC,KAAT,EAAgBtB,EAAhB,EAAoB;AAC7CC,WAAOsB,EAAP,CAAUD,KAAV,EAAiBtB,EAAjB;AACH,CAFD;;AAIAN,WAAW8B,UAAX,GAAwB,UAASC,MAAT,EAAiBC,OAAjB,EAA0BC,UAA1B,EAAsCC,OAAtC,EAA+C;AACnE,WAAO,IAAItB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAmB;AAClCP,eAAOQ,OAAP,CAAe,+BAAf,EAAgD,EAACgB,QAAOA,MAAR,EAAgBC,SAAQA,OAAxB,EAAiCC,YAAWA,UAA5C,EAAwDC,SAAQA,OAAhE,EAAhD,EAA0H,UAACjB,IAAD,EAAQ;AAC9H,gBAAIA,KAAKC,IAAL,IAAa,GAAjB,EACIJ,OAAOG,KAAKC,IAAZ,EADJ,KAGIL,QAAQI,IAAR;AACA;AACP,SAND;AAOH,KARM,CAAP;AASH,CAVD;;AAYAjB,WAAWmC,UAAX,GAAwB,UAASC,KAAT,EAAgB;AACpC,WAAO,IAAIxB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAmB;AAClCP,eAAOQ,OAAP,CAAe,+BAAf,EAAgDqB,KAAhD,EAAuD,UAACnB,IAAD,EAAQ;AAC3D,gBAAIA,KAAKC,IAAL,IAAa,GAAjB,EACIJ,OAAOG,KAAKC,IAAZ,EADJ,KAGIL,QAAQI,IAAR;AACP,SALD;AAMH,KAPM,CAAP;AAQH,CATD","file":"GameSocket.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\pomelo","sourcesContent":["const Constant = require('Constant');\r\nconst GameSocket = module.exports;\r\n\r\nfunction _socketInit (host, port, cb) {\r\n    pomelo.init({\r\n        host: host,\t// window.location.hostname\r\n        port: port,\r\n        log: true\r\n    }, cb);\r\n}\r\n\r\nfunction _getConnection(uid) {\r\n    return new Promise((resolve, reject)=>{\r\n        pomelo.request('gate.gateHandler.queryEntry', {uid:uid}, data=>{\r\n            pomelo.disconnect(()=>{\r\n                if (!data.code == 200)\r\n                    reject(data.code);\r\n                else\r\n                    resolve(data);\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\nGameSocket.loginGameServer = function(uid) {\r\n    return new Promise((resolve, reject)=>{\r\n        _socketInit(Constant.SERVER.HOST, Constant.SERVER.PORT, ()=>{\r\n            _getConnection(uid).then(data=>{\r\n                _socketInit(data.host, data.port, ()=>{\r\n                    pomelo.request(\"connector.entryHandler.enter\", {\r\n                        uid     : uid,\r\n                        gameType: Constant.SERVER.GAME_TYPE\r\n                    }, data=>{\r\n                        if (data.code != 200)\r\n                            reject(data.code);\r\n                        else\r\n                            resolve(data);\r\n                    });\r\n                });\r\n            }).catch(reject);\r\n        });\r\n    });\r\n};\r\n\r\nGameSocket.addGameListener = function(route, cb) {\r\n    pomelo.on(route, cb);\r\n};\r\n\r\nGameSocket.readyFight = function(gameId, tableId, tableToken, robotId) {\r\n    return new Promise((resolve, reject)=>{\r\n        pomelo.request('fight.fightHandler.readyFight', {gameId:gameId, tableId:tableId, tableToken:tableToken, robotId:robotId}, (data)=>{\r\n            if (data.code != 200)\r\n                reject(data.code);\r\n            else\r\n                resolve(data);\r\n                // cc.error(`start game failed:${Constant.GAME_CODE[data.code]}`);\r\n        })\r\n    });\r\n};\r\n\r\nGameSocket.doOperator = function(param) {\r\n    return new Promise((resolve, reject)=>{\r\n        pomelo.request('fight.fightHandler.doOperator', param, (data)=>{\r\n            if (data.code != 200)\r\n                reject(data.code);\r\n            else\r\n                resolve(data);\r\n        })\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n"]}