{"version":3,"sources":["Game.js"],"names":["BasePanel","require","Constant","GameSocket","Util","cc","Class","extends","Component","canvasNode","Node","gameTime","mineArea","userInfoRed","userInfoBlue","playerRed","playerBlue","notice","loading","audio","default","type","AudioClip","noticeCamp","getComponent","onTouchEvent","myUid","mines","gamePlayers","proArr","push","JsonData","loadJson","Promise","all","then","addGameListener","gameStart","bind","gameOver","mineReborn","doOperator","guestLogin","catch","error","err","audioEngine","play","uid","Math","floor","random","tableId","robotId","loginGameServer","readyFight","PLATFORM","GameKey","ROOM_KEY","showNotice","GAME_CODE","code","data","status","team","tempUid","hasOwnProperty","_setHead","setUid","mineInfo","mineId","_setMine","setTimeDown","active","sign","userInfoComp","setNickname","onGameStart","mineItemInfo","getDataById","dir","createNodeByPrefab","newNode","posInfo","setPosition","v2","id","mineComp","itemId","score","Number","parseInt","skillId","speed","rota","addChild","event","playerCamp","touchPos","node","convertToWorldSpace","getTouches","getLocation","clickIdx","checkToolClick","OPERATOR","C2S_USE_TOOL","intValue","sendThrowHook","S2C_THROW_HOOK","throwHook","S2C_HOLD_ITEM","holdItem","S2C_GET_HOOK","getItemFromHook","S2C_USE_TOOL","effectUser","useTool","parent","convertToWorldSpaceAR","position","onBomb","onMagnet","FIGHTER_RESULT","WIN","onGameOver","stopAll"],"mappings":"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","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["const BasePanel = require('./BasePanel');\r\nconst Constant = require('./constant/Constant');\r\nconst GameSocket = require('./pomelo/GameSocket');\r\n\r\nconst Util = require('./Util');\r\ncc.Class({\r\n    extends: cc.Component,\r\n    extends: BasePanel,\r\n\r\n    statics: {\r\n\r\n    },\r\n    properties: {\r\n        canvasNode  : cc.Node,\r\n        gameTime    : cc.Node,\r\n        mineArea    : cc.Node,\r\n        userInfoRed : cc.Node,\r\n        userInfoBlue: cc.Node,\r\n        playerRed   : cc.Node,\r\n        playerBlue  : cc.Node,\r\n        notice      : cc.Node,\r\n        loading     : cc.Node,\r\n        audio       : {\r\n            default : [],\r\n            type    : cc.AudioClip\r\n        },\r\n    },\r\n\r\n    onLoad () {\r\n        this.noticeCamp = this.notice.getComponent('GameNotice');\r\n        this.onTouchEvent(this.canvasNode);\r\n\r\n        this.myUid = 0;         // 本人id\r\n        this.mines = {};        // 矿\r\n        this.gamePlayers = {};  // 玩家游戏逻辑类\r\n\r\n        let proArr = [];    // 预处理的均放入该数组\r\n        proArr.push(JsonData.loadJson());\r\n\r\n\r\n        Promise.all(proArr).then(()=>{\r\n            GameSocket.addGameListener('onGameStart', this.gameStart.bind(this));\r\n            GameSocket.addGameListener('onGameOver', this.gameOver.bind(this));\r\n            GameSocket.addGameListener('onReborn', this.mineReborn.bind(this));\r\n            GameSocket.addGameListener('onOperator', this.doOperator.bind(this));\r\n\r\n            this.guestLogin();\r\n        }).catch(err=>{\r\n            cc.error('init err:' + err);\r\n        });\r\n\r\n        cc.audioEngine.play(this.audio[0], true, 1);\r\n    },\r\n    // update (dt) {},\r\n    // start () {},\r\n\r\n    guestLogin() {\r\n        let uid = 'rand-' + Math.floor(200 + Math.random() * 1000);\r\n        this.myUid = uid;\r\n\r\n        let tableId = 'table-' + Math.floor(200 + Math.random() * 1000);\r\n        let robotId = tableId;\r\n        // let tableId = Constant.PLATFORM.TABLE_ID;\r\n        // let robotId = null;\r\n        GameSocket.loginGameServer(uid).then(()=>{\r\n            GameSocket.readyFight(Constant.PLATFORM.GameKey, tableId, Constant.PLATFORM.ROOM_KEY, robotId).catch(code=>{\r\n                this.noticeCamp.showNotice(Constant.GAME_CODE[code]);\r\n            });\r\n        }).catch(err=>{cc.error(err)});\r\n    },\r\n\r\n    gameStart(data) {\r\n        if (!!this.status)\r\n            return;\r\n        this.status = 1;\r\n\r\n        let team = data['team'];\r\n\r\n        for (let tempUid in team) {\r\n            if (!team.hasOwnProperty(tempUid))\r\n                continue;\r\n            this._setHead(tempUid, team[tempUid]);\r\n        }\r\n\r\n        this.gamePlayers[this.myUid].setUid(this.myUid);\r\n\r\n        let mineInfo = data['mine'];\r\n        for (let mineId in mineInfo) {\r\n            if (!mineInfo.hasOwnProperty(mineId))\r\n                continue;\r\n            this._setMine(mineInfo[mineId]);\r\n        }\r\n\r\n        this.gameTime.getComponent('TimeLabel').setTimeDown(data['timeDown'] || 60000);\r\n        this.loading.active = false;\r\n        cc.error('gameStart init over');\r\n    },\r\n\r\n    _setHead(uid, sign) {\r\n        let userInfoComp = null;\r\n        if (sign == 1) {\r\n            userInfoComp = this.userInfoRed.getComponent(\"UserInfo\");\r\n            this.gamePlayers[uid] = this.playerRed.getComponent('GamePlayer');\r\n        } else {\r\n            userInfoComp = this.userInfoBlue.getComponent(\"UserInfo\");\r\n            this.gamePlayers[uid] = this.playerBlue.getComponent('GamePlayer');\r\n        }\r\n        userInfoComp.setNickname(uid);\r\n        this.gamePlayers[uid].onGameStart();\r\n    },\r\n\r\n    _setMine(mineInfo) {\r\n        let mineItemInfo = JsonData.getDataById('minerItem', mineInfo['itemId']);\r\n        let dir = 'prefab/mine/';\r\n        Util.createNodeByPrefab(dir + mineItemInfo['prefab'], (err, newNode)=>{\r\n            if (!!err) {\r\n                cc.error(err);\r\n                return;\r\n            }\r\n            let posInfo = JsonData.getDataById(`nodePosition`, mineInfo['pos']);\r\n            newNode.setPosition(cc.v2(posInfo['pos'][0], posInfo['pos'][1]));\r\n            let mineId = mineInfo.id;\r\n\r\n            let mineComp = newNode.getComponent('Mine');\r\n            mineComp.id = mineId;\r\n            mineComp.itemId = mineInfo['itemId'];\r\n            mineComp.score = Number.parseInt(mineItemInfo['score']);\r\n            mineComp.skillId = mineItemInfo['skillId'];\r\n            mineComp.speed = mineItemInfo['speed'];\r\n            mineComp.rota = mineItemInfo['rota'];\r\n            mineComp.type = mineItemInfo['type'];\r\n\r\n            this.mines[mineId] = mineComp;\r\n            this.mineArea.addChild(newNode);\r\n        })\r\n    },\r\n\r\n    mineReborn(data) {\r\n        this._setMine(data);\r\n    },\r\n\r\n    onTouchEnd: function (event) {\r\n        if (this.status != 1)\r\n            return;\r\n        let playerCamp = this.gamePlayers[this.myUid];\r\n        if (!playerCamp) {\r\n            cc.error('not login');\r\n            return;\r\n        }\r\n\r\n        let touchPos = this.node.convertToWorldSpace(event.getTouches()[0].getLocation());\r\n        let clickIdx = playerCamp.checkToolClick(touchPos);\r\n        if (clickIdx != -1) {\r\n            GameSocket.doOperator({type:Constant.OPERATOR.C2S_USE_TOOL, intValue:[clickIdx]});\r\n        } else {\r\n            playerCamp.sendThrowHook();\r\n        }\r\n    },\r\n\r\n    doOperator(data) {\r\n        let uid = data['uid'];\r\n        let intValue = data['intValue'];\r\n        let playerCamp = this.gamePlayers[uid];\r\n        switch (data.type) {\r\n            case Constant.OPERATOR.S2C_THROW_HOOK:\r\n                playerCamp.throwHook(intValue);\r\n                break;\r\n            case Constant.OPERATOR.S2C_HOLD_ITEM:\r\n                playerCamp.holdItem(this.mines[intValue[0]]);\r\n                break;\r\n            case Constant.OPERATOR.S2C_GET_HOOK:\r\n                playerCamp.getItemFromHook(intValue);\r\n                break;\r\n            case Constant.OPERATOR.S2C_USE_TOOL:\r\n                let effectUser = this.gamePlayers[intValue[2]];\r\n                playerCamp.useTool(intValue[0], effectUser.node.parent.convertToWorldSpaceAR(effectUser.node.position)).then(()=>{\r\n                    switch (intValue[1]) {\r\n                        case 1:\r\n                            effectUser.onBomb(intValue[3]);\r\n                            cc.audioEngine.play(this.audio[1], false, 1);\r\n                            break;\r\n                        case 2:\r\n                            effectUser.onMagnet();\r\n                            cc.audioEngine.play(this.audio[2], false, 1);\r\n                            break;\r\n                    }\r\n                });\r\n                break;\r\n        }\r\n    },\r\n\r\n    gameOver(data) {\r\n        this.noticeCamp.showNotice(data[this.myUid] == Constant.FIGHTER_RESULT.WIN ? \"游戏胜利\" : \"游戏失败\");\r\n        for (let tempUid in this.gamePlayers) {\r\n            if (!this.gamePlayers.hasOwnProperty(tempUid))\r\n                continue;\r\n            this.gamePlayers[tempUid].onGameOver();\r\n        }\r\n        cc.audioEngine.stopAll();\r\n        cc.error('gameOver');\r\n    },\r\n});"]}