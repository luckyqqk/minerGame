{"version":3,"sources":["Hook.js"],"names":["Constant","require","GameSocket","cc","Class","extends","Component","properties","swingSpeed","maxRotaLeft","maxRotaRight","speed","partLeft","Node","partRight","partMiddle","bolt","onLoad","direct","hookSpeedPer","basePos","node","position","partLeftComp","getComponent","partRightComp","partMiddleComp","onGameStart","_repeatSwing","onGameOver","stopAllActions","setUid","uid","sendThrowHook","status","HOOK_STATUS","SWING","param","type","OPERATOR","C2S_THROW_HOOK","intValue","Math","floor","rotation","doOperator","catch","error","GAME_CODE","code","throwOut","intArr","THROWING","doOpenAct","then","worldPos","parent","convertToWorldSpaceAR","width","x","height","y","rota","bottomX","tan","bottomPos","convertToNodeSpaceAR","v2","parentPos","maxDistance","sqrt","time","_getHookSpeed","runAction","moveTo","collision","other","group","COLLISION","C2S_HOLD_ITEM","BACKING","MINE_STATUS","CAN_CLI","mineCamp","id","holdItem","setHookMiddle","doCloseAct","_pullBacking","dis","sub","mag","move","callBackCB","callFunc","C2S_GET_HOOK","sequence","getItemFromHook","doRepeat","aimRota","swingTime","abs","rotateTo","waitUse","_resetHookSpeedPer","changeDirect","seqActInt","repeatForever","onBomb","removeSelf","onMagnet","active","theMineCamp"],"mappings":"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","file":"Hook.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\bean","sourcesContent":["\r\nconst Constant = require('../constant/Constant');\r\nconst GameSocket = require('../pomelo/GameSocket');\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 方向\r\n        // 转速\r\n        // 角度\r\n        // itemId\r\n        // status\r\n        swingSpeed  : 30,\r\n        maxRotaLeft : 50,\r\n        maxRotaRight: -50,\r\n        speed       : 600,\r\n        partLeft    : cc.Node,\r\n        partRight   : cc.Node,\r\n        partMiddle  : cc.Node,\r\n        bolt        : cc.Node,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // SWING       :   0,  // 摆动中\r\n    // THROWING    :   1,  // 抛出中\r\n    // BACKING     :   2,  // 拉回中\r\n\r\n    onLoad () {\r\n        this.direct = 0;    // 摆动方向\r\n        this.hookSpeedPer = 1;  // 速度系数\r\n\r\n        this.basePos = this.node.position;\r\n        this.partLeftComp = this.partLeft.getComponent('HookPart');\r\n        this.partRightComp = this.partRight.getComponent('HookPart');\r\n        this.partMiddleComp = this.partMiddle.getComponent('HookMiddle');\r\n\r\n        // cc.error(this.line);\r\n\r\n    },\r\n\r\n    onGameStart() {\r\n        this._repeatSwing();\r\n    },\r\n\r\n    onGameOver() {\r\n        this.node.stopAllActions();\r\n    },\r\n\r\n    setUid(uid) {\r\n        this.uid = uid;\r\n    },\r\n\r\n    sendThrowHook() {\r\n        if (this.status != Constant.HOOK_STATUS.SWING)\r\n            return;\r\n        let param = {type:Constant.OPERATOR.C2S_THROW_HOOK, intValue:[Math.floor(this.node.rotation), this.direct]};\r\n        GameSocket.doOperator(param).catch(code=>{\r\n            cc.error(Constant.GAME_CODE[code]);\r\n        });\r\n    },\r\n\r\n    throwOut(intArr) {\r\n        if (this.status != Constant.HOOK_STATUS.SWING)\r\n            return;\r\n        this.status = Constant.HOOK_STATUS.THROWING;\r\n        this.node.stopAllActions();\r\n\r\n        this.partRightComp.doOpenAct(1);\r\n        this.partLeftComp.doOpenAct().then(()=>{\r\n            let worldPos = this.node.parent.convertToWorldSpaceAR(this.node.position);\r\n            let width = worldPos.x,\r\n                height = worldPos.y,\r\n                rota = intArr[0];\r\n            this.direct = intArr[1];\r\n            this.node.rotation = rota;\r\n            let bottomX = height * Math.tan(rota * 0.017453293);\r\n            bottomX = width - bottomX;\r\n            let bottomPos = this.node.parent.convertToNodeSpaceAR(cc.v2(bottomX, 0));\r\n            // let dis = bottomPos.sub(this.node.convertToWorldSpaceAR(this.basePos)).mag();\r\n            let parentPos = this.node.parent.position;\r\n            let maxDistance = Math.sqrt(parentPos.x * parentPos.x + parentPos.y * parentPos.y);\r\n            let time = Math.floor(maxDistance / this._getHookSpeed());\r\n            this.node.runAction(cc.moveTo(time, bottomPos));\r\n        });\r\n    },\r\n\r\n    collision(other) {\r\n        if (!this.uid)  // 不是自己的爪子,不碰撞\r\n            return;\r\n        if (this.status < 2)\r\n            return;\r\n\r\n        if (other.node.group == 'aroundCli') {\r\n            this.status = Constant.HOOK_STATUS.COLLISION;   // 避免瞬间碰撞\r\n            this.node.stopAllActions();\r\n            GameSocket.doOperator({type:Constant.OPERATOR.C2S_HOLD_ITEM, intValue:[]}).catch(code=>{\r\n                cc.error(Constant.GAME_CODE[code]);\r\n            });\r\n        } else if (other.node.group == 'mine') {\r\n            // 拉回状态不碰矿\r\n            if (this.status == Constant.HOOK_STATUS.BACKING)\r\n                return;\r\n            if (other.node.getComponent('Mine').status != Constant.MINE_STATUS.CAN_CLI)\r\n                return;\r\n            this.status = Constant.HOOK_STATUS.COLLISION;   // 避免瞬间碰撞\r\n            this.node.stopAllActions();\r\n            let mineCamp = other.node.getComponent('Mine');\r\n            let param = {type:Constant.OPERATOR.C2S_HOLD_ITEM, intValue:[mineCamp.id]};\r\n            GameSocket.doOperator(param).catch(code=>{\r\n                cc.error(Constant.GAME_CODE[code]);\r\n            });\r\n        }\r\n    },\r\n\r\n    holdItem(mineCamp) {\r\n        this.status = Constant.HOOK_STATUS.BACKING;\r\n        this.node.stopAllActions();\r\n        this.mineCamp = mineCamp;\r\n        let rota = 0;\r\n        if (!!mineCamp) {\r\n            mineCamp.setHookMiddle(this.partMiddle);\r\n            rota = mineCamp['rota'];\r\n        }\r\n        this.partRightComp.doCloseAct(-rota);\r\n        this.partLeftComp.doCloseAct(rota).then(()=>{\r\n            this._pullBacking();\r\n        });\r\n    },\r\n\r\n    _pullBacking() {\r\n        let speed = !!this.mineCamp ? this.mineCamp['speed'] * this.hookSpeedPer : this._getHookSpeed();\r\n        let dis = this.node.position.sub(this.basePos).mag();\r\n        let time = dis / speed;\r\n        let move = cc.moveTo(time, this.basePos);\r\n        if (!this.uid) {\r\n            this.node.runAction(move);\r\n            return;\r\n        }\r\n        let callBackCB = cc.callFunc(function() {\r\n            GameSocket.doOperator({type:Constant.OPERATOR.C2S_GET_HOOK}).catch(code=>{\r\n                cc.error(Constant.GAME_CODE[code]);\r\n            });\r\n        }, this);\r\n        this.node.runAction(cc.sequence(move, callBackCB));\r\n    },\r\n\r\n    getItemFromHook(intValue) {\r\n        this.partRightComp.doCloseAct(0);\r\n        this.partLeftComp.doCloseAct(0).then(()=>{\r\n            this.status = Constant.HOOK_STATUS.SWING;\r\n            let doRepeat = cc.callFunc(function() {\r\n                this.direct = 1 - this.direct;  // 转向\r\n                this.node.stopAllActions();\r\n                this._repeatSwing();\r\n            }, this);\r\n            let aimRota = !!this.direct ? this.maxRotaLeft : this.maxRotaRight;\r\n            let swingTime = Math.abs(aimRota - this.node.rotation) / this.swingSpeed;\r\n            this.node.runAction(cc.sequence(cc.rotateTo(swingTime, aimRota), doRepeat));\r\n        });\r\n        if (!intValue[0])\r\n            return null;\r\n        let mineCamp = this.mineCamp;\r\n        if (!mineCamp)\r\n            return null;\r\n        mineCamp.waitUse();\r\n        this.mineCamp = null;\r\n        this._resetHookSpeedPer();\r\n        return mineCamp;\r\n    },\r\n\r\n    _repeatSwing() {\r\n        this.status = Constant.HOOK_STATUS.SWING;\r\n        let changeDirect = cc.callFunc(function() {\r\n            this.direct = 1 - this.direct;  // 转向\r\n        }, this);\r\n        let swingTime = Math.abs(this.maxRotaLeft - this.maxRotaRight) / this.swingSpeed;\r\n        let seqActInt = !!this.direct ?\r\n            cc.sequence(cc.rotateTo(swingTime, this.maxRotaLeft), changeDirect, cc.rotateTo(swingTime, this.maxRotaRight)):\r\n            cc.sequence(cc.rotateTo(swingTime, this.maxRotaRight), changeDirect, cc.rotateTo(swingTime, this.maxRotaLeft));\r\n        this.node.runAction(cc.repeatForever(seqActInt));\r\n    },\r\n\r\n    // start () {\r\n    // },\r\n\r\n    onBomb() {\r\n        this.node.stopAllActions();\r\n        // let rota = this.node.rotation;\r\n        this.mineCamp.node.runAction(cc.sequence(cc.removeSelf(true), cc.callFunc(function(){\r\n            this.mineCamp = null;\r\n            this.partRightComp.doCloseAct(0);\r\n            this.partLeftComp.doCloseAct(0).then(()=>{\r\n                this._pullBacking();\r\n            });\r\n        }, this)));\r\n    },\r\n\r\n    onMagnet() {\r\n        this.hookSpeedPer = 2;\r\n        this.bolt.active = true;\r\n        let theMineCamp = this.mineCamp;\r\n        if (!theMineCamp)\r\n            return;\r\n        this.node.stopAllActions();\r\n        this._pullBacking();\r\n        // let rota = this.node.rotation;\r\n        // this.partRightComp.doCloseAct(-rota);\r\n        // this.partLeftComp.doCloseAct(rota).then(()=>{\r\n        // });\r\n    },\r\n\r\n    // effectSkill(skillType, isEffect) {\r\n    //     switch (skillType) {\r\n    //         case 1:\r\n    //             if (!isEffect)\r\n    //                 break;\r\n    //             this.node.stopAllActions();\r\n    //             this.mineCamp.node.runAction(cc.sequence(cc.removeSelf(true), cc.callFunc(function(){\r\n    //                 this.mineCamp = null;\r\n    //                 this.partRightComp.doCloseAct(-rota);\r\n    //                 this.partLeftComp.doCloseAct(rota).then(()=>{\r\n    //                     this._pullBacking();\r\n    //                 });\r\n    //             }, this)));\r\n    //             break;\r\n    //         case 2:\r\n    //             this.hookSpeedPer = 2;\r\n    //             this.bolt.active = true;\r\n    //             let theMineCamp = this.mineCamp;\r\n    //             if (!theMineCamp)\r\n    //                 break;\r\n    //             this.node.stopAllActions();\r\n    //             let rota = this.node.rotation;\r\n    //             this.partRightComp.doCloseAct(-rota);\r\n    //             this.partLeftComp.doCloseAct(rota).then(()=>{\r\n    //                 this._pullBacking();\r\n    //             });\r\n    //             break;\r\n    //     }\r\n    // },\r\n\r\n    // 抓到一个道具后,加速失效\r\n    _resetHookSpeedPer() {\r\n        this.hookSpeedPer = 1;\r\n        this.bolt.active = false;\r\n    },\r\n\r\n    _getHookSpeed() {\r\n        return this.speed * this.hookSpeedPer;\r\n    },\r\n\r\n    // update: function(dt) {\r\n        // if (!this.lineGraph)\r\n        //     return;\r\n        // this.lineGraph.clear();\r\n        // this.lineGraph.moveTo(this.node.position.x, this.node.position.y);\r\n        // this.lineGraph.lineTo(this.partMiddle.position.x, this.partMiddle.position.y);\r\n\r\n    // },\r\n});\r\n"]}